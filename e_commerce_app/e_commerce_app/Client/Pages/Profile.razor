@page "/profile"
@using e_commerce_app.Client.Services.AuthService
@inject IAuthService AuthService
@attribute [Authorize]
<AuthorizeView>
    <h3>User Logged in as @context.User.Identity.Name</h3>
</AuthorizeView>

<h3> Change Password </h3>
<EditForm Model="_userChangePassword" OnValidSubmit="ChangePassword">
    <DataAnnotationsValidator/>
        <div class="mb-3">
            <label for="password">Password</label>
            <InputText id="password" @bind-Value="_userChangePassword.Password" class="form-control" type="password" />
            <ValidationMessage For="@(() => _userChangePassword.Password)" />
        </div>
        <div class="mb-3">
            <label for="confirmPassword">Confirm Password</label>
            <InputText id="confirmPassword" @bind-Value="_userChangePassword.ConfirmPassword" class="form-control" type="password" />
            <ValidationMessage For="@(() => _userChangePassword.ConfirmPassword)" />
        </div>
        <button type="submit" class="btn btn-primary">Change Password</button>
        <div class="text-danger bg-info m-3 p-3 border-3">
            <span>@message</span>
        </div>
</EditForm>
@code {
    UserChangePassword _userChangePassword = new UserChangePassword();
    string message = string.Empty;

    private async Task ChangePassword()
    {
        var result = await AuthService.ChangePassword(_userChangePassword);
        message = result.Message;
    }

}